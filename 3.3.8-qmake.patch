--- origsrc/qt-x11-free-3.3.8/qmake/generators/makefile.cpp	2007-02-02 08:01:28.000000000 -0600
+++ src/qt-x11-free-3.3.8/qmake/generators/makefile.cpp	2007-10-28 22:15:48.296875000 -0500
@@ -1378,7 +1378,11 @@
 void
 MakefileGenerator::writePrlFile(QTextStream &t)
 {
-    QString target = project->first("TARGET");
+    QString target;
+	if(!project->isEmpty("QMAKE_CYGWIN_SHLIB"))
+	    target = project->first("L_TARGET");
+	else
+	    target = project->first("TARGET");
     int slsh = target.findRev(Option::dir_sep);
     if(slsh != -1)
 	target = target.right(target.length() - slsh - 1);
--- origsrc/qt-x11-free-3.3.8/qmake/generators/unix/unixmake.cpp	2007-02-02 08:01:27.000000000 -0600
+++ src/qt-x11-free-3.3.8/qmake/generators/unix/unixmake.cpp	2007-10-28 22:15:48.296875000 -0500
@@ -803,15 +803,13 @@
 		uninst.append("\n\t");
 	    uninst.append("-$(DEL_FILE) \"" + dst_pc + "\"");
 	}
-	if ( project->isEmpty("QMAKE_CYGWIN_SHLIB") ) {
 	    if ( !project->isActiveConfig("staticlib") && !project->isActiveConfig("plugin") ) {
-		if ( project->isEmpty("QMAKE_HPUX_SHLIB") ) {
+		if ( project->isEmpty("QMAKE_HPUX_SHLIB") && project->isEmpty("QMAKE_CYGWIN_SHLIB") ) {
 		    links << "$(TARGET0)" << "$(TARGET1)" << "$(TARGET2)";
 		} else {
 		    links << "$(TARGET0)";
 	        }
 	    }
-	}
     }
 
     if(!resource && project->isActiveConfig("compile_libtool")) {
@@ -865,7 +863,10 @@
 		    if(lslash != -1)
 			link = link.right(link.length() - (lslash + 1));
 		    QString dst_link = root + targetdir + link;
-		    ret += "\n\t-$(SYMLINK) \"$(TARGET)\" \"" + dst_link + "\"";
+            if(!project->isEmpty("QMAKE_CYGWIN_SHLIB"))
+                ret += "\n\t-$(INSTALL_FILE) \"" + destdir + "$(TARGET0)\" \"" + dst_link + "\"";
+            else
+		        ret += "\n\t-$(SYMLINK) \"$(TARGET)\" \"" + dst_link + "\"";
 		    if(!uninst.isEmpty())
 			uninst.append("\n\t");
 		    uninst.append("-$(DEL_FILE) \"" + dst_link + "\"");
--- origsrc/qt-x11-free-3.3.8/qmake/generators/unix/unixmake2.cpp	2007-02-02 08:01:27.000000000 -0600
+++ src/qt-x11-free-3.3.8/qmake/generators/unix/unixmake2.cpp	2007-10-28 22:15:48.312500000 -0500
@@ -294,7 +294,7 @@
 	t << "TARGETD   = " << var("TARGET") << endl;
     } else if (!project->isActiveConfig("staticlib") && project->variables()["QMAKE_APP_FLAG"].isEmpty()) {
 	t << "TARGETA	= " << var("TARGETA") << endl;
-	if (project->isEmpty("QMAKE_HPUX_SHLIB")) {
+	if (project->isEmpty("QMAKE_HPUX_SHLIB") && project->isEmpty("QMAKE_CYGWIN_SHLIB") ) {
 	    t << "TARGETD	= " << var("TARGET_x.y.z") << endl;
 	    t << "TARGET0	= " << var("TARGET_") << endl;
 	    t << "TARGET1	= " << var("TARGET_x") << endl;
@@ -303,7 +303,7 @@
 	    t << "TARGETD	= " << var("TARGET_x") << endl;
 	    t << "TARGET0	= " << var("TARGET_") << endl;
 	}
-    }
+	}
     writeExtraVariables(t);
     t << endl;
 
@@ -545,6 +545,7 @@
 	}
 	if(!destdir.isEmpty())
 	    t << "\n\t" << "test -d " << destdir << " || mkdir -p " << destdir;
+
 	if(!project->isEmpty("QMAKE_PRE_LINK"))
 	    t << "\n\t" << var("QMAKE_PRE_LINK");
 
@@ -561,6 +562,15 @@
 	    if(!project->isEmpty("QMAKE_POST_LINK"))
 		t << "\n\t" << var("QMAKE_POST_LINK") << "\n\t";
 	    t << endl << endl;
+	} else if(!project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+	    t << "\n\t"
+	      << "-$(DEL_FILE) $(TARGET) $(TARGET0)" << "\n\t"
+	      << var("QMAKE_LINK_SHLIB_CMD") << "\n\t";
+	    if(!destdir.isEmpty())
+		t  << "\n\t"
+		   << "-$(DEL_FILE) " << var("DESTDIR") << "$(TARGET)\n\t"
+		   << "-$(DEL_FILE) " << var("DESTDIR") << "$(TARGET0)\n\t"
+		   << "-$(MOVE) $(TARGET) $(TARGET0) " << var("DESTDIR");
 	} else if(project->isEmpty("QMAKE_HPUX_SHLIB")) {
 	    t << "\n\t"
 	      << "-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)" << "\n\t"
@@ -568,13 +578,14 @@
 	    t << varGlue("QMAKE_LN_SHLIB","-"," "," $(TARGET) $(TARGET0)")  << "\n\t"
 	      << varGlue("QMAKE_LN_SHLIB","-"," "," $(TARGET) $(TARGET1)") << "\n\t"
 	      << varGlue("QMAKE_LN_SHLIB","-"," "," $(TARGET) $(TARGET2)");
-	    if(!destdir.isEmpty())
+        if(!destdir.isEmpty())
 		t << "\n\t"
 		  << "-$(DEL_FILE) " << var("DESTDIR") << "$(TARGET)\n\t"
 		  << "-$(DEL_FILE) " << var("DESTDIR") << "$(TARGET0)\n\t"
 		  << "-$(DEL_FILE) " << var("DESTDIR") << "$(TARGET1)\n\t"
 		  << "-$(DEL_FILE) " << var("DESTDIR") << "$(TARGET2)\n\t"
 		  << "-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) " << var("DESTDIR");
+
 	    if(!project->isEmpty("QMAKE_POST_LINK"))
 		t << "\n\t" << var("QMAKE_POST_LINK");
 	    t << endl << endl;
@@ -876,10 +887,17 @@
     else
 	t << "\t-$(DEL_FILE) " << destdir << "$(TARGET)" << " " << "$(TARGET)" << "\n";
     if(!project->isActiveConfig("staticlib") && project->variables()["QMAKE_APP_FLAG"].isEmpty() &&
-       !project->isActiveConfig("plugin") && !project->isActiveConfig("compile_libtool"))
-	t << "\t-$(DEL_FILE) " << destdir << "$(TARGET0) " << destdir << "$(TARGET1) "
-	  << destdir << "$(TARGET2) $(TARGETA)" << "\n";
-    t << endl << endl;
+       !project->isActiveConfig("plugin") && !project->isActiveConfig("compile_libtool")) {
+	if (!project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+	    t << "\t-$(DEL_FILE) " << destdir << "$(TARGET) " << destdir << "$(TARGET0) "
+          << destdir << "$(TARGETA)" << "\n";
+        t << endl << endl;
+	} else {
+	    t << "\t-$(DEL_FILE) " << destdir << "$(TARGET0) " << destdir << "$(TARGET1) "
+	      << destdir << "$(TARGET2) $(TARGETA)" << "\n";
+        t << endl << endl;
+    }
+    }
 
     if(doPrecompiledHeaders() && !project->isEmpty("PRECOMPILED_HEADER") ) {
 	QString precomph = fileFixify(project->first("PRECOMPILED_HEADER"));
@@ -1201,7 +1219,7 @@
 #endif
 	project->variables()["TARGET"].first().prepend(project->first("DESTDIR"));
        if ( !project->variables()["QMAKE_CYGWIN_EXE"].isEmpty() )
-	    project->variables()["TARGET_EXT"].append(".exe");
+	    project->variables()["TARGET"].first() += ".exe";
     } else if ( project->isActiveConfig("staticlib") ) {
 	project->variables()["TARGET"].first().prepend("lib");
 	project->variables()["TARGET"].first() += ".a";
@@ -1273,6 +1291,15 @@
 							    project->first("VER_PAT"));
 	    }
 	    project->variables()["TARGET"] = project->variables()["TARGET_x.y.z"];
+	} else if ( !project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+		project->variables()["TARGET_x"].append("cyg" + project->first("TARGET") + 
+							"-" + project->first("VER_MAJ") + "." +
+							project->first("QMAKE_EXTENSION_SHLIB"));
+		project->variables()["TARGET_"].append("lib" + project->first("TARGET") + 
+							  "." + project->first("QMAKE_EXTENSION_SHLIB") + ".a");
+		project->variables()["L_TARGET"].append("lib" + project->first("TARGET") + 
+                                "." + project->first("QMAKE_EXTENSION_SHLIB"));
+		project->variables()["TARGET"] = project->variables()["TARGET_x"];
 	} else {
 	    project->variables()["TARGET_"].append("lib" + project->first("TARGET") + "." +
 						   project->first("QMAKE_EXTENSION_SHLIB"));
@@ -1319,8 +1346,11 @@
 	    } else {
 		if(!project->variables()["TARGET_x"].isEmpty() )
 		    project->variables()["QMAKE_LFLAGS_SONAME"].first() += project->first("TARGET_x");
-	    }
+		}
 	}
+    if(!project->variables()["QMAKE_CYGWIN_SHLIB"].isEmpty())
+        project->variables()["QMAKE_LFLAGS_SONAME"].append("-Wl,--out-implib,$(TARGET0)");
+
 	if ( project->variables()["QMAKE_LINK_SHLIB_CMD"].isEmpty() )
 	    project->variables()["QMAKE_LINK_SHLIB_CMD"].append(
 		"$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)");
@@ -1401,7 +1431,11 @@
 QString
 UnixMakefileGenerator::libtoolFileName()
 {
-    QString ret = var("TARGET");
+    QString ret;
+    if(!project->isEmpty("QMAKE_CYGWIN_SHLIB"))
+	    ret = var("L_TARGET");
+	else
+	    ret = var("TARGET");
     int slsh = ret.findRev(Option::dir_sep);
     if(slsh != -1)
 	ret = ret.right(ret.length() - slsh);
@@ -1441,9 +1475,14 @@
     if(project->isActiveConfig("plugin")) {
 	t << var("TARGET");
     } else {
-    	if (project->isEmpty("QMAKE_HPUX_SHLIB"))
-	    t << var("TARGET_x.y.z") << " ";
-    	t << var("TARGET_x") << " " << var("TARGET_");
+        if (!project->isEmpty("QMAKE_CYGWIN_SHLIB")) {
+            t << var("TARGET_");
+        } else {
+            if (project->isEmpty("QMAKE_HPUX_SHLIB")) {
+            t << var("TARGET_x.y.z") << " ";
+            }
+            t << var("TARGET_x") << " " << var("TARGET_");
+        }
     }
     t << "'\n\n";
 
@@ -1486,7 +1525,11 @@
 QString
 UnixMakefileGenerator::pkgConfigFileName()
 {
-    QString ret = var("TARGET");
+    QString ret;
+    if(!project->isEmpty("QMAKE_CYGWIN_SHLIB"))
+	    ret = var("L_TARGET");
+	else
+	    ret = var("TARGET");
     int slsh = ret.findRev(Option::dir_sep);
     if(slsh != -1)
 	ret = ret.right(ret.length() - slsh);
